---
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';

import Block from '../../components/Block.astro';
import CommonLayout from '../../layouts/CommonLayout.astro';
import posts from '../../media/posts.json';
import { linkCss } from '../../styles/common';
import dateFromISOString from '../../utils/date-from-iso-string';
import truncateSpecial from '../../utils/truncate-special';

export const getStaticPaths = (async () => {
    return posts.map((post, idx) => {
        const nextPost = posts[idx + 1];
        const prevPost = posts[idx - 1];

        return {
            params: { slug: post.hash },
            props: {
                post,
                prevSlug: prevPost?.hash,
                prevText: prevPost && truncateSpecial(prevPost?.text, 29),
                nextSlug: nextPost?.hash,
                nextText: nextPost && truncateSpecial(nextPost?.text, 29),
            },
        };
    });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post, nextSlug, nextText, prevSlug, prevText } = Astro.props;

const mapUrl =
    false &&
    post.latitude &&
    post.longitude &&
    `https://maps.googleapis.com/maps/api/staticmap?center=${post.latitude},${
        post.longitude
    }&zoom=12&size=640x480&maptype=roadmap&markers=color:orange%7C${
        post.latitude
    },${post.longitude}&key=${import.meta.env.GOOGLE_MAPS_API_KEY}}`;

/*
import.meta.env.DEV ||
import.meta.env.IS_NON_PRODUCTION
    ? `https://develop.images.tomekf.pl/media/${post.hash}.${post.type}`
    : `https://images.tomekf.pl/media/${post.hash}.${post.type}`
*/
---

<CommonLayout title={`${post.hash} | Media`}>
    <Block>
        <a class={linkCss} href="/media">Back to media</a>
        <Block class="custom-html">
            <h2>{post.hash}</h2>
            <p class="break-words">{post.text}</p>
            {
                post.type === 'jpg' && (
                    <img
                        src={
                            import.meta.env.DEV
                                ? `https://images.tomekf.pl/media/${post.hash}.${post.type}`
                                : `/media/${post.hash}.${post.type}`
                        }
                        alt={post.hash}
                    />
                )
            }
            {
                post.type === 'mp4' && (
                    <video controls>
                        <source
                            src={
                                import.meta.env.DEV
                                    ? `https://images.tomekf.pl/media/${post.hash}.${post.type}`
                                    : `/media/${post.hash}.${post.type}`
                            }
                            type="video/mp4"
                        />
                    </video>
                )
            }
            {mapUrl && <img src={mapUrl} alt={`static map for ${post.hash}`} />}
            <p>
                <time datetime={post.date}>{dateFromISOString(post.date)}</time>
            </p>
        </Block>
    </Block>
    <Block>
        {
            prevSlug && (
                <>
                    <>prev: </>
                    <a href={`/media/${prevSlug}`} class={linkCss}>
                        {prevText}
                    </a>
                </>
            )
        }
        {prevSlug && nextSlug && <> | </>}
        {
            nextSlug && (
                <>
                    <>next: </>
                    <a href={`/media/${nextSlug}`} class={linkCss}>
                        {nextText}
                    </a>
                </>
            )
        }
    </Block>
</CommonLayout>
