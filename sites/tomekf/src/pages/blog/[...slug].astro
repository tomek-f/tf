---
import type {
    GetStaticPaths,
    // InferGetStaticParamsType,
    InferGetStaticPropsType,
} from 'astro';
import { getCollection /* , type CollectionEntry */ } from 'astro:content';

import Block from '../../components/Block.astro';
import CommonLayout from '../../layouts/CommonLayout.astro';
import { linkCss } from '../../styles/common';

// type Test = CollectionEntry<'blog'>;

export const getStaticPaths = (async () => {
    const allBlogPosts = await getCollection('blog');
    const postsSorted = allBlogPosts.sort(
        (a, b) =>
            new Date(a.data.date).getTime() - new Date(b.data.date).getTime(),
    );

    return postsSorted.map((entry, idx) => ({
        params: {
            slug: entry.slug,
        },
        props: {
            entry,
            prevSlug: postsSorted[idx - 1]?.slug,
            prevTitle: postsSorted[idx - 1]?.data.title,
            nextSlug: postsSorted[idx + 1]?.slug,
            nextTitle: postsSorted[idx + 1]?.data.title,
        },
    }));
}) satisfies GetStaticPaths;

// https://docs.astro.build/pl/guides/typescript/#infer-getstaticpaths-types
type Props = InferGetStaticPropsType<typeof getStaticPaths>;
// const { slug } = Astro.params as InferGetStaticParamsType<typeof getStaticPaths>;
const { pathname } = Astro.url;
const { entry, nextSlug, nextTitle, prevSlug, prevTitle } = Astro.props;
const { Content /* , remarkPluginFrontmatter, headings */ } =
    await entry.render();
---

<CommonLayout title={`${entry.data.title} | Blog`}>
    <Content />
    <Block slot="footer">
        {
            prevSlug && (
                <>
                    <>prev: </>
                    <a href={`${pathname}/../${prevSlug}`} class={linkCss}>
                        {prevTitle}
                    </a>
                </>
            )
        }
        {prevSlug && nextSlug && <> | </>}
        {
            nextSlug && (
                <>
                    <>next: </>
                    <a href={`${pathname}/../${nextSlug}`} class={linkCss}>
                        {nextTitle}
                    </a>
                </>
            )
        }
    </Block>
</CommonLayout>
