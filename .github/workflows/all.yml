name: all

on:
    push:
        branches: ['**']
    workflow_dispatch:

jobs:
    build-pocs:
        uses: ./.github/workflows/build-other.yml
        #     secrets: inherit
    vitest:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/vitest
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/lint
    prettier:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/prettier
    types:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/types

    test-images:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install --global vercel@latest
            - name: copy images
              run: git clone https://.:${{ secrets.GH_TOKEN }}@github.com/tomek-f/tf-data.git tf-data
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}
            - run: ls -lhaFS && ls -lhaFS tf-data/data/media
            - run: cp -r tf-data/data/media sites/tomekf/public/media
            - run: ls -lhaFS sites/tomekf/public/media

    # TESTING/PREVIEW >>>>>>>>>>
    testing-vercel-deploy-tomekf:
        if: github.ref != 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: testing
        needs: [vitest, lint, prettier, types]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            # - run: npm ci # vercel build handles this
            - run: npm install --global vercel@latest
            # - name: copy images
            #   run: git clone https://.:${{ secrets.GH_TOKEN }}@github.com/tomek-f/tf-data.git tf-data
            - name: deploy
              run: vercel link --cwd ./sites/tomekf --token ${VERCEL_TOKEN} --yes && vercel pull --token ${VERCEL_TOKEN} --yes && vercel build && vercel deploy --token ${VERCEL_TOKEN}
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_1 }}
    testing-vercel-deploy-next-playground:
        if: github.ref != 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: testing
        needs: [vitest, lint, prettier, types]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            # - run: npm ci # vercel build handles this
            - run: npm install --global vercel@latest
            - name: deploy
              run: vercel link --cwd ./pocs/next-playground --token ${VERCEL_TOKEN} --yes && vercel pull --token ${VERCEL_TOKEN} --yes && vercel build && vercel deploy --token ${VERCEL_TOKEN}
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_3 }}
    testing-netlify-deploy-astro-solidjs:
        if: github.ref != 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: testing
        needs: [vitest, lint, prettier, types]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install npm install --global netlify-cli@latest
            - name: deploy
              run: netlify deploy --build --filter @tf/astro-solidjs --dir=pocs/astro-solidjs/dist
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_1 }}
    testing-netlify-deploy-react-playground:
        if: github.ref != 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: testing
        needs: [vitest, lint, prettier, types]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install npm install --global netlify-cli@latest
            - name: deploy
              run: netlify deploy --build --filter @tf/react-playground --dir=pocs/react-playground/dist
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_2 }}
    testing-netlify-deploy-astro-ssr:
        if: github.ref != 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: testing
        needs: [vitest, lint, prettier, types]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install npm install --global netlify-cli@latest
            - name: deploy
              run: netlify deploy --build --filter @tf/astro-ssr --dir=pocs/astro-ssr/dist
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_3 }}
    # TESTING/PREVIEW <<<<<<<<<<

    # PRODUCTION >>>>>>>>>>
    production-vercel-deploy-tomekf:
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: production
        needs: [vitest, lint, prettier, types]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            # - run: npm ci # vercel build handles this
            - run: npm install --global vercel@latest
            - name: deploy
              run: vercel link --cwd ./sites/tomekf --token ${VERCEL_TOKEN} --yes && vercel pull --token ${VERCEL_TOKEN} --yes && vercel build --prod && vercel deploy --prod --token ${VERCEL_TOKEN}
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_1 }}
    production-vercel-deploy-next-playground:
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: production
        needs: [vitest, lint, prettier, types]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            # - run: npm ci # vercel build handles this
            - run: npm install --global vercel@latest
            - name: deploy
              run: vercel link --cwd ./pocs/next-playground --token ${VERCEL_TOKEN} --yes && vercel pull --token ${VERCEL_TOKEN} --yes && vercel build --prod && vercel deploy --prod --token ${VERCEL_TOKEN}
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_3 }}
    production-netlify-deploy-astro-solidjs:
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: production
        needs: [vitest, lint, prettier, types]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install npm install --global netlify-cli@latest
            - name: deploy
              run: netlify deploy --build --filter @tf/astro-solidjs --dir=pocs/astro-solidjs/dist --prod
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_1 }}
    production-netlify-deploy-react-playground:
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: production
        needs: [vitest, lint, prettier, types]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install npm install --global netlify-cli@latest
            - name: deploy
              run: netlify deploy --build --filter @tf/react-playground --dir=pocs/react-playground/dist --prod
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_2 }}
    production-netlify-deploy-astro-ssr:
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: production
        needs: [vitest, lint, prettier, types]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install npm install --global netlify-cli@latest
            - name: deploy
              run: netlify deploy --build --filter @tf/astro-ssr --dir=pocs/astro-ssr/dist --prod
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_3 }}
    # PRODUCTION <<<<<<<<<<
