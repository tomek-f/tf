name: all

on:
    push:
        branches: ['**']
    workflow_dispatch:

jobs:
    build-next-playground:
        # uses: tomek-f/tf/.github/workflows/build-next-playground.yml
        uses: ./.github/workflows/build-next-playground.yml
        secrets: inherit
    build-react-playground:
        uses: ./.github/workflows/build-react-playground.yml
    build-tomekf:
        uses: ./.github/workflows/build-tomekf.yml
    build-pocs:
        uses: ./.github/workflows/build-pocs.yml
    vitest:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/vitest
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/lint
    prettier:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/prettier
    types:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/types

    # TESTING/PREVIEW >>>>>>>>>>
    testing-vercel-deploy-tomekf:
        if: github.ref != 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: testing
        needs: [vitest, lint, prettier, types, build-tomekf]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            # - run: npm ci # vercel build handles this
            - run: npm install --global vercel@latest
            - name: üë∑üèº
              run: vercel pull --yes && vercel build --cwd ./sites/tomekf && vercel --token ${VERCEL_TOKEN} --cwd ./sites/tomekf
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_1 }}
    testing-vercel-deploy-next-playground:
        if: github.ref != 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: testing
        needs: [vitest, lint, prettier, types, build-next-playground]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
            - run: npm install --global vercel@latest
            - name: üë∑üèº
              run: vercel --token ${VERCEL_TOKEN}
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_3 }}
    testing-netlify-deploy-astro-solidjs:
        if: github.ref != 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: testing
        needs: [vitest, lint, prettier, types, build-pocs]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install npm install --global netlify-cli@latest
            - name: üë∑üèº
              run: netlify deploy --build --filter @tf/astro-solidjs --dir=pocs/astro-solidjs/dist
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_1 }}
    testing-netlify-deploy-react-playground:
        if: github.ref != 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: testing
        needs: [vitest, lint, prettier, types, build-react-playground]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install npm install --global netlify-cli@latest
            - name: üë∑üèº
              run: netlify deploy --build --filter @tf/react-playground --dir=pocs/react-playground/dist
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_2 }}
    # TESTING/PREVIEW <<<<<<<<<<

    # PRODUCTION >>>>>>>>>>
    production-vercel-deploy-tomekf:
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: production
        needs: [vitest, lint, prettier, types, build-tomekf]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            # - run: npm ci # vercel build handles this
            - run: npm install --global vercel@latest
            - name: üë∑üèº
              run: vercel pull --yes && vercel build --prod --cwd ./sites/tomekf && vercel --token ${VERCEL_TOKEN} --prod --cwd ./sites/tomekf
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_1 }}
    production-vercel-deploy-next-playground:
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: production
        needs: [vitest, lint, prettier, types, build-next-playground]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
            - run: npm install --global vercel@latest
            - name: üë∑üèº
              run: vercel --token ${VERCEL_TOKEN} --prod
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_3 }}
    production-netlify-deploy-astro-solidjs:
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: production
        needs: [vitest, lint, prettier, types, build-pocs]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install npm install --global netlify-cli@latest
            - name: üë∑üèº
              run: netlify deploy --build --filter @tf/astro-solidjs --dir=pocs/astro-solidjs/dist --prod
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_1 }}
    production-netlify-deploy-react-playground:
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        environment: production
        needs: [vitest, lint, prettier, types, build-react-playground]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  check-latest: true
                  cache: 'npm'
            - run: npm ci
            - run: npm install npm install --global netlify-cli@latest
            - name: üë∑üèº
              run: netlify deploy --build --filter @tf/react-playground --dir=pocs/react-playground/dist --prod
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_2 }}
    # PRODUCTION <<<<<<<<<<
